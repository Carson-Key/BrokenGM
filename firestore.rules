rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
    	allow read: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    match /clocks/{documentId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.players;
      allow update, write, delete, read: if request.auth != null && request.auth.uid in resource.data.admins;
    }
    match /relations/{documentId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.players;
      allow update, write, delete, read: if request.auth != null && request.auth.uid in resource.data.admins;
    }
    match /votingsystems/{documentId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.players;
      allow update, write, delete, read: if request.auth != null && request.auth.uid in resource.data.admins;
    }
    match /campaigns/{documentId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.players;
      allow update, write, delete, read: if request.auth != null && request.auth.uid in resource.data.admins;
    }
    match /clockevents/{documentId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.players;
      allow update, write, delete, read: if request.auth != null && request.auth.uid in resource.data.admins;
    }
    match /characternotes/{documentId} {
    	allow create: if request.auth != null;
      allow read: if request.auth != null && request.auth.uid in resource.data.players;
      allow update, write, delete, read: if request.auth != null && request.auth.uid in resource.data.admins;
    }
  }
}